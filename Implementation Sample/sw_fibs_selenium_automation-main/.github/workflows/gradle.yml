# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  workflow_dispatch:
  # push:
    # branches: [ "branch2" ]
#   pull_request:
#     branches: [ "main" ]

permissions:
  contents: read
  id-token: write
  checks: write

jobs:
  build:

    runs-on: sw-ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11 for x64
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        architecture: x64
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2.3.3
      with:
        arguments: build --dry-run

    - name: Test runs
      run: ./gradlew clean test --info
        
#     - name: Test runs 
#       run: ./gradlew test --tests --info

        
    - name: Build the Test Report
      if: success() || failure()
      uses: dorny/test-reporter@v1
      with:
        name: Test Results
        # Even though we are using TestNG, we can output JUnit-style reports.
        path: '**/junitreports/*.xml'
        reporter: java-junit
#         attachments: true
        
    - name: Zipping the screenshot folder
      if: always()
      uses: montudor/action-zip@v1
      with:
       args: zip -qq -r ./result.zip . -x /runner/_work/sw_fibs_automation/sw_fibs_automation/screenshots/
       
    - name: upload artifacts Screenshots
      if: always()
      uses: actions/upload-artifact@v3
      with:
          name: upload
          path: screenshots/
          attachments: ./screenshots.zip

    - name: Zipping the html folder
      if: always()
      uses: montudor/action-zip@v1
      with:
       args: zip -qq -r ./result.zip . -x /runner/_work/sw_fibs_selenium_automation/sw_fibs_selenium/build/
       
    - name: upload artifacts html
      if: always()
      uses: actions/upload-artifact@v3
      with:
          name: html
          path: sw_fibs_selenium/build
          attachments: ./html.zip
          
    # - name: Deploy Pages
    #   uses: JamesIves/github-pages-deploy-actions@4.1.5
    #   with:
    #       branch: develop
    #       folder: ./
          
    - name: Send mail
      if: success() || failure()
      uses: dawidd6/action-send-mail@v3
      with:
       connection_url: "smtp:"
       server_address: smtp.sherwin.com
       server_port: 25
       secure: false
       subject: FIBS Test Automation Execution Report
       to:   vidyalakshmi.mh@sherwin.com
       # sai.kishore.durishetty@sherwin.com,
       sender: no-reply@sherwin.com
       ignore_cert: true
       from: QA
       body: 'Hi, Please find the FIBS test execution report of the QA Automation Regression Suite.'
       attachments: ./spark.html
 
#Running all the cases
